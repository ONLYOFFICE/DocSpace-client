@import "../../styles/variables/index.scss";
@import "../../styles/_mixins.scss";

:root {
  --password-input-tooltip-text-color: #{$black};
  --password-input-icon-color: #{$gray-strong};
  --password-input-icon-color-hover: #{$gray};
  --password-input-icon-color-disabled: #{$gray-strong};

  &[data-theme="dark"] {
    --password-input-tooltip-text-color: #{$black};
    --password-input-icon-color: #{$gray-dark-strong};
    --password-input-icon-color-hover: #{$gray-dark};
    --password-input-icon-color-disabled: #{$gray-dark};
  }

  &[data-dir="rtl"] {
    .styledInput {
      :global {
        .append {
          padding-left: 0px;
          left: 16px;
        }
      }
    }
  }

  &[data-dir="ltr"] {
    .styledInput {
      :global {
        .append {
          padding-right: 2px;
          right: -16px;
        }
      }
    }
  }
}

.tooltipContainer {
  color: var(--password-input-tooltip-text-color);

  :global {
    .generate-btn-container {
      margin-top: 10px;
    }
  }
}

.tooltip {
  width: 294px;

  @include mobile {
    width: 320px;
  }
}

.styledInput {
  display: flex;
  align-items: center;
  line-height: 32px;
  flex-direction: row;
  flex-wrap: wrap;
  position: relative;

  &.fullWidth {
    display: block;
  }

  input {
    flex: inherit;
    width: calc(100% - 40px);
    text-align: var(--input-text-align);
    &::-ms-reveal {
      display: none;
    }
  }

  @include tablet-and-below {
    flex-wrap: wrap;
  }

  :global {
    .input-block-icon {
      height: 42px;
    }

    .append {
      position: absolute;
      top: 50%;
      transform: translate(-50%, -50%);
    }

    .prepend-children {
      padding: 0;
    }

    .break {
      flex-basis: 100%;
      height: 0;
    }

    .text-tooltip {
      line-height: 14px;
      margin-top: -2px;
    }

    .password-field-wrapper {
      display: flex;
      width: auto;

      @include mobile {
        width: 100%;
      }
    }
  }

  :global {
    .input-relative {
      svg {
        path {
          fill: var(--password-input-icon-color);
        }
      }

      &:hover {
        svg {
          path {
            fill: var(--password-input-icon-color-hover);
          }
        }
      }
    }
  }

  &[data-disabled="true"] {
    :global {
      .input-relative {
        svg {
          path {
            fill: var(--password-input-icon-color-disabled);
          }
        }
      }
    }
  }
}

.passwordProgress {
  &.withInputWidth {
    width: var(--input-width);
  }

  &:not(.withInputWidth) {
    flex: auto;
  }

  :global {
    .input-relative {
      position: relative;
      svg {
        overflow: hidden;
        vertical-align: middle;
      }
    }
  }

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}
