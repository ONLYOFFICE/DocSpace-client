{
  "key_path": "SuccessfullySaveSettingsMessage",
  "content": "Settings have been successfully updated",
  "content_en_sha1_hash": "a3e0f1940499fb1b34253a9a7b050c2136e1f58b",
  "created_at": "2025-05-19T21:30:52.842Z",
  "updated_at": "2025-05-22T11:56:37.644Z",
  "comment": {
    "text": "This translation key is used to display a success message when settings are successfully updated or saved, typically after clicking a button or submitting a form. It appears in various UI elements, such as dialog boxes and toast notifications, to inform users of the outcome of their actions. Its purpose is to provide positive feedback to the user after completing a task.",
    "is_auto": true,
    "updated_at": "2025-05-20T09:44:21.460Z"
  },
  "usage": [
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\appearance.js",
      "line_number": 344,
      "context": "if (!selectThemeId) return;\n \n try {\n await api.settings.sendAppearanceTheme({ selected: selectThemeId });\n await getAppearanceTheme();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n saveToSessionStorage(\"selectColorId\", selectThemeId);\n saveToSessionStorage(\"defaultColorId\", selectThemeId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\appearance.js",
      "line_number": 344,
      "context": "if (!selectThemeId) return;\n \n try {\n await api.settings.sendAppearanceTheme({ selected: selectThemeId });\n await getAppearanceTheme();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n saveToSessionStorage(\"selectColorId\", selectThemeId);\n saveToSessionStorage(\"defaultColorId\", selectThemeId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\appearance.js",
      "line_number": 344,
      "context": "if (!selectThemeId) return;\n \n try {\n await api.settings.sendAppearanceTheme({ selected: selectThemeId });\n await getAppearanceTheme();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n saveToSessionStorage(\"selectColorId\", selectThemeId);\n saveToSessionStorage(\"defaultColorId\", selectThemeId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\appearance.js",
      "line_number": 344,
      "context": "if (!selectThemeId) return;\n \n try {\n await api.settings.sendAppearanceTheme({ selected: selectThemeId });\n await getAppearanceTheme();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n saveToSessionStorage(\"selectColorId\", selectThemeId);\n saveToSessionStorage(\"defaultColorId\", selectThemeId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\additionalResources.js",
      "line_number": 72,
      "context": "const settings = JSON.parse(JSON.stringify(additionalResourcesData));\n settings.feedbackAndSupportEnabled = feedbackEnabled;\n settings.helpCenterEnabled = helpEnabled;\n await setAdditionalResources(settings);\n await getAdditionalResources();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n } finally {\n setIsLoading(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\additionalResources.js",
      "line_number": 72,
      "context": "const settings = JSON.parse(JSON.stringify(additionalResourcesData));\n settings.feedbackAndSupportEnabled = feedbackEnabled;\n settings.helpCenterEnabled = helpEnabled;\n await setAdditionalResources(settings);\n await getAdditionalResources();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n } finally {\n setIsLoading(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\brandName.js",
      "line_number": 63,
      "context": "try {\n setIsSaving(true);\n await saveBrandName(data);\n setBrandName(data.logoText);\n \n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n } finally {\n setIsSaving(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\companyInfoSettings.js",
      "line_number": 72,
      "context": "setIsLoading(true);\n \n try {\n await setCompanyInfoSettings(address, companyName, email, phone, site);\n await getCompanyInfoSettings();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n } finally {\n setIsLoading(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\companyInfoSettings.js",
      "line_number": 72,
      "context": "setIsLoading(true);\n \n try {\n await setCompanyInfoSettings(address, companyName, email, phone, site);\n await getCompanyInfoSettings();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n } finally {\n setIsLoading(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\whitelabel.js",
      "line_number": 64,
      "context": "}, []);\n \n const onRestoreDefault = async () => {\n try {\n await resetWhiteLabelLogos();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n };",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Branding\\whitelabel.js",
      "line_number": 64,
      "context": "}, []);\n \n const onRestoreDefault = async () => {\n try {\n await resetWhiteLabelLogos();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (error) {\n toastr.error(error);\n }\n };",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Customization\\configure-deep-link.tsx",
      "line_number": 131,
      "context": "setIsSaving(true);\n await saveDeepLinkSettings(type);\n setShowReminder(false);\n saveToSessionStorage(\"defaultConfigureDeepLink\", type);\n saveToSessionStorage(\"currentConfigureDeepLink\", type);\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (e) {\n toastr.error(e!);\n } finally {\n setIsSaving(false);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\common\\Customization\\dns-settings.js",
      "line_number": 161,
      "context": "timerId = setTimeout(() => {\n setIsLoading(true);\n }, [200]);\n \n await saveDNSSettings();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (e) {\n setIsError(true);\n toastr.error(e);\n }",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\integration\\LDAP\\sub-components\\SyncContainer.js",
      "line_number": 77,
      "context": "return () => window.removeEventListener(\"resize\", onCheckView);\n }, []);\n \n const onSaveClick = React.useCallback(() => {\n saveCronLdap()\n .then(() => toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\")))\n .catch((e) => toastr.error(e));\n }, []);\n \n const onSync = React.useCallback(() => {\n syncLdap(t).catch((e) => toastr.error(e));",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\integration\\LDAP\\sub-components\\ToggleAutoSync.js",
      "line_number": 92,
      "context": "toggleCron();\n \n if (!e.target.checked) {\n saveCronLdap()\n .then(() =>\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\")),\n )\n .catch((err) => toastr.error(err));\n }\n },\n [toggleCron],",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\integration\\SMTPSettings\\sub-components\\ButtonContainer.js",
      "line_number": 113,
      "context": "setButtonOperation({ ...buttonOperation, save: true });\n }, [200]);\n \n try {\n await updateSMTPSettings();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (e) {\n toastr.error(e);\n }\n \n clearTimeout(timerId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\integration\\SMTPSettings\\sub-components\\ButtonContainer.js",
      "line_number": 113,
      "context": "setButtonOperation({ ...buttonOperation, save: true });\n }, [200]);\n \n try {\n await updateSMTPSettings();\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n } catch (e) {\n toastr.error(e);\n }\n \n clearTimeout(timerId);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\store\\SsoFormStore.js",
      "line_number": 456,
      "context": "this.isSubmitLoading = true;\n \n try {\n await submitSsoForm(data);\n toastr.success(t(\"Settings:SuccessfullySaveSettingsMessage\"));\n this.isSubmitLoading = false;\n this.load();\n } catch (err) {\n toastr.error(err);\n console.error(err);",
      "module": "\\packages\\client"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "incorrect_translation",
          "description": "The translation 'Ajustes se han actualizado correctamente' is not the most natural or preferred way to express 'Settings have been successfully updated' in Spanish. While technically correct, it sounds a bit awkward. A more natural phrasing would use a verb like 'guardar' (to save).",
          "suggestion": "Ajustes se han guardado correctamente"
        }
      ],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "spelling",
          "description": "The word 'යාවත්කාල' (yavatthakaala) is technically correct but feels overly formal and archaic in this context. It implies a broader 'upgrade' rather than a simple 'update'.",
          "suggestion": "Consider a more common and user-friendly term for 'updated', such as 'ආකෘති වෙනස් කෙරිණි' (aakruthi venas keerini - 'settings changed') or 'ගබඩා කෙරිණි' (gabadaa keerini - 'saved')."
        },
        {
          "type": "incorrect_translation",
          "description": "While 'සාර්ථකව' (saarthaakava) translates to 'successfully', it adds unnecessary formality for a user-facing message. It can be omitted without losing the meaning.",
          "suggestion": "Remove 'සාර්ථකව' (saarthaakava). The sentence would read: 'සැකසුම් යාවත්කාල කෙරිණි' or, preferably, based on the suggestion above: 'සැකසුම් ආකෘති වෙනස් කෙරිණි' or 'සැකසුම් ගබඩා කෙරිණි'."
        }
      ],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}