{
  "key_path": "MeLabel",
  "content": "Me",
  "content_en_sha1_hash": "94563ec383e29aa3743abd9b337b2e084fb199fb",
  "created_at": "2025-05-19T21:30:46.429Z",
  "updated_at": "2025-05-20T09:35:32.004Z",
  "comment": {
    "text": "This translation key \"MeLabel\" is used to display a user's name when they have ownership rights or are the current room owner in various UI components, such as dialogs and templates. The text appears next to the username in a bold font and indicates that the user has specific permissions or access.",
    "is_auto": true,
    "updated_at": "2025-05-20T09:35:32.004Z"
  },
  "usage": [
    {
      "file_path": "/packages/client/src/HOCs/withContent.js",
      "line_number": 104,
      "context": "const createdDate = this.getStatusByDate(true);\n const lastOpenedDate = getCorrectDate(locale, lastOpened);\n \n const fileOwner =\n createdBy &&\n ((viewer?.id === createdBy.id && t(\"Common:MeLabel\")) ||\n createdBy.displayName);\n \n const accessToEdit =\n access === ShareAccessRights.FullAccess || // only badges?\n access === ShareAccessRights.None; // TODO: fix access type for owner (now - None)",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/components/dialogs/CreateEditRoomDialog/sub-components/ChangeRoomOwner/index.js",
      "line_number": 75,
      "context": "<div className=\"change-owner-display-name\">\n <Text fontWeight={600} fontSize=\"13px\" noSelect>\n {userName}\n </Text>\n {roomOwner.id === currentUserId ? (\n <Text className=\"me-label\">({t(\"Common:MeLabel\")})</Text>\n ) : null}\n </div>\n </div>\n \n {canChangeOwner ? (",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/components/dialogs/CreateEditRoomDialog/sub-components/TemplateAccess/TemplateAccess.tsx",
      "line_number": 160,
      "context": "/>\n <div className=\"template-access_display-name\">\n <Text fontWeight={600} fontSize=\"13px\">\n {userName}\n </Text>\n <Text className=\"me-label\">({t(\"Common:MeLabel\")})</Text>\n </div>\n </>\n ) : (\n <>\n <div className=\"access-avatar-container\">{avatarList}</div>",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/components/panels/TemplateAccessSettingsPanel/sub-components/Item.tsx",
      "line_number": 103,
      "context": "<div className=\"invite-input-item\">\n <Text truncate noSelect className=\"invite-input-text\">\n {Encoder.htmlDecode(name ?? \"\")}\n </Text>\n <Text truncate noSelect className=\"invite-input-text_me\">\n {item.isOwner ? `(${t(\"Common:MeLabel\")})` : null}\n </Text>\n </div>\n </StyledInviteUserBody>\n {canDelete ? (\n <ReactSVG",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/InfoPanel/Body/views/Members/User.js",
      "line_number": 314,
      "context": "getContent={getTooltipContent}\n place=\"bottom\"\n />\n )} */}\n {currentMember?.id === user.id ? (\n <div className=\"me-label\">&nbsp;{`(${t(\"Common:MeLabel\")})`}</div>\n ) : null}\n </div>\n {!user.isGroup ? (\n <div className=\"role-email\" style={{ display: \"flex\" }}>\n <Text",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 513,
      "context": "if (roomsFilter.subjectId) {\n const user = await getUser(roomsFilter.subjectId);\n const isMe = userId === roomsFilter.subjectId;\n \n const label = isMe ? t(\"Common:MeLabel\") : user.displayName;\n \n const subject = {\n key: isMe ? FilterKeys.me : roomsFilter.subjectId,\n group: FilterGroups.roomFilterSubject,\n label,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 513,
      "context": "if (roomsFilter.subjectId) {\n const user = await getUser(roomsFilter.subjectId);\n const isMe = userId === roomsFilter.subjectId;\n \n const label = isMe ? t(\"Common:MeLabel\") : user.displayName;\n \n const subject = {\n key: isMe ? FilterKeys.me : roomsFilter.subjectId,\n group: FilterGroups.roomFilterSubject,\n label,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 513,
      "context": "if (roomsFilter.subjectId) {\n const user = await getUser(roomsFilter.subjectId);\n const isMe = userId === roomsFilter.subjectId;\n \n const label = isMe ? t(\"Common:MeLabel\") : user.displayName;\n \n const subject = {\n key: isMe ? FilterKeys.me : roomsFilter.subjectId,\n group: FilterGroups.roomFilterSubject,\n label,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 513,
      "context": "if (roomsFilter.subjectId) {\n const user = await getUser(roomsFilter.subjectId);\n const isMe = userId === roomsFilter.subjectId;\n \n const label = isMe ? t(\"Common:MeLabel\") : user.displayName;\n \n const subject = {\n key: isMe ? FilterKeys.me : roomsFilter.subjectId,\n group: FilterGroups.roomFilterSubject,\n label,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 444,
      "context": "if (user) {\n if (user.id === userId) {\n filterValues.push({\n key: FilterKeys.me,\n group: FilterGroups.filterInviter,\n label: t(\"Common:MeLabel\"),\n });\n } else {\n filterValues.push({\n key: user.id,\n group: FilterGroups.filterInviter,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 444,
      "context": "if (user) {\n if (user.id === userId) {\n filterValues.push({\n key: FilterKeys.me,\n group: FilterGroups.filterInviter,\n label: t(\"Common:MeLabel\"),\n });\n } else {\n filterValues.push({\n key: user.id,\n group: FilterGroups.filterInviter,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 444,
      "context": "if (user) {\n if (user.id === userId) {\n filterValues.push({\n key: FilterKeys.me,\n group: FilterGroups.filterInviter,\n label: t(\"Common:MeLabel\"),\n });\n } else {\n filterValues.push({\n key: user.id,\n group: FilterGroups.filterInviter,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 444,
      "context": "if (user) {\n if (user.id === userId) {\n filterValues.push({\n key: FilterKeys.me,\n group: FilterGroups.filterInviter,\n label: t(\"Common:MeLabel\"),\n });\n } else {\n filterValues.push({\n key: user.id,\n group: FilterGroups.filterInviter,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/shared/components/filling-role-process/sub-components/role-step/RoleStep.tsx",
      "line_number": 95,
      "context": "<h5 title={roleName} className={styles.roleTitle}>\n {roleName}\n </h5>\n <p className={styles.userName}>\n {userName}{\" \"}\n {currentUserId === user.id ? `(${t(\"Common:MeLabel\")})` : null}\n </p>\n {hasMoreThanOneHistory ? (\n <ArrowIcon\n onClick={toggleCollapse}\n className={classNames(styles.arrow, {",
      "module": "/packages/shared"
    },
    {
      "file_path": "/packages/shared/components/filling-role-selector/FillingRoleSelector.tsx",
      "line_number": 66,
      "context": "/>\n <div className={styles.info}>\n <h5>\n {decode(role.user.displayName)} &nbsp;\n {currentUserId === role.user.id ? (\n <span className={styles.me}>({t(\"Common:MeLabel\")})</span>\n ) : null}\n </h5>\n <span>{role.name}</span>\n </div>\n <CrossIcon",
      "module": "/packages/shared"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}