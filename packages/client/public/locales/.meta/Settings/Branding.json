{
  "key_path": "Branding",
  "content": "Branding",
  "content_en_sha1_hash": "d17dc3843de8e54fc084f0b952690209018ca128",
  "created_at": "2025-05-19T21:30:50.719Z",
  "updated_at": "2025-05-20T09:45:40.074Z",
  "comment": {
    "text": "This translation key is used for branding-related settings, and its purpose is to display a descriptive label in the user interface. It appears in various sections of the Portal Settings page, providing context for users navigating through different branding configurations.",
    "is_auto": true,
    "updated_at": "2025-05-20T09:45:40.074Z"
  },
  "usage": [
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/common/branding.js",
      "line_number": 37,
      "context": "import { isManagement } from \"@docspace/shared/utils/common\";\n import { DeviceType } from \"@docspace/shared/enums\";\n \n import withLoading from \"SRC_DIR/HOCs/withLoading\";\n import { setDocumentTitle } from \"SRC_DIR/helpers/utils\";\n import { WhiteLabel } from \"./Branding/whitelabel\";\n import { BrandName } from \"./Branding/brandName\";\n import { CompanyInfoSettings } from \"./Branding/companyInfoSettings\";\n import { AdditionalResources } from \"./Branding/additionalResources\";\n import MobileView from \"./Branding/MobileView\";",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/common/index.js",
      "line_number": 38,
      "context": "import { inject, observer } from \"mobx-react\";\n import withLoading from \"SRC_DIR/HOCs/withLoading\";\n import { DeviceType } from \"@docspace/shared/enums\";\n import { SECTION_HEADER_HEIGHT } from \"@docspace/shared/components/section/Section.constants\";\n import Customization from \"./customization\";\n import Branding from \"./branding\";\n import Appearance from \"./appearance\";\n import LoaderTabs from \"./sub-components/loaderTabs\";\n import { resetSessionStorage } from \"../../utils\";\n \n const TabsCommon = (props) => {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/utils/settingsTree.js",
      "line_number": 95,
      "context": "{\n id: \"portal-settings_catalog-branding\",\n key: \"0-1\",\n icon: \"\",\n link: \"branding\",\n tKey: \"Branding\",\n isCategory: true,\n children: [\n {\n id: \"portal-settings_catalog-brand-name\",\n key: \"0-1-0\",",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/management/src/categories/branding/index.tsx",
      "line_number": 30,
      "context": "// International. See the License terms at http://creativecommons.org/licenses/by-sa/4.0/legalcode\n \n import React, { useEffect } from \"react\";\n import { useTranslation } from \"react-i18next\";\n \n import BrandingPage from \"client/BrandingPage\";\n import { setDocumentTitle } from \"SRC_DIR/utils\";\n \n type BrandingProps = {\n logoText: string;\n };",
      "module": "/packages/management"
    },
    {
      "file_path": "/packages/management/src/categories/encrypt-data/index.tsx",
      "line_number": 64,
      "context": "const { portals, encryptionBlockHelpUrl } = settingsStore;\n \n const isDisabled = portals.length <= 1;\n \n useEffect(() => {\n setDocumentTitle(t(\"Branding\"), logoText);\n }, []);\n \n useEffect(() => {\n const fetchSettings = async () => {\n try {",
      "module": "/packages/management"
    },
    {
      "file_path": "/packages/management/src/categories/settings/index.tsx",
      "line_number": 79,
      "context": "];\n \n if (!isCommunity) {\n data.unshift({\n id: \"branding\",\n name: t(\"Settings:Branding\"),\n content: <Branding logoText={logoText} />,\n });\n }\n \n const onSelect = (element: TTabItem) => {",
      "module": "/packages/management"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}