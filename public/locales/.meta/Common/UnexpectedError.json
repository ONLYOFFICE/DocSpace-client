{
  "key_path": "UnexpectedError",
  "content": "An unexpected error occurred. Try again later or contact support.",
  "content_en_sha1_hash": "25ad5a8afd50db67da636bee026c36dbe54b15d6",
  "created_at": "2025-05-19T21:30:49.388Z",
  "updated_at": "2025-05-20T21:05:31.803Z",
  "comment": {
    "text": "This translation key is used to display an error message when an unexpected issue occurs while performing a specific action, such as opening a link or sending a test email. It appears in a notification dialog, typically triggered by user interaction, and informs the user that they should try again later or contact support for assistance.",
    "is_auto": true,
    "updated_at": "2025-05-20T08:35:57.509Z"
  },
  "usage": [
    {
      "file_path": "/packages/client/src/helpers/filesUtils.js",
      "line_number": 88,
      "context": "return i18n.t(\"Common:NewFolder\");\n }\n };\n \n export const getUnexpectedErrorText = () => {\n return i18n.t(\"Common:UnexpectedError\");\n };\n \n export const connectedCloudsTitleTranslation = (key, t) => {\n switch (key) {\n case \"Box\":",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/integration/SMTPSettings/sub-components/ButtonContainer.js",
      "line_number": 136,
      "context": "isWaitRequest = true;\n \n const result = await getSendingTestMailStatus();\n \n if (!result) {\n intervalId && toastr.error(t(\"Common:UnexpectedError\"));\n clearInterval(intervalId);\n intervalId = null;\n isWaitRequest = false;\n \n setSMTPSettingsLoading(false);",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/payments/Standalone/sub-components/ButtonContainer.js",
      "line_number": 39,
      "context": "const ButtonContainer = ({ t, buyUrl, siteDomain }) => {\n const onClickBuy = () => {\n const url = buyUrl || siteDomain;\n url\n ? window.open(url, \"_blank\")\n : toastr.error(t(\"Common:UnexpectedError\"));\n };\n return (\n <StyledButtonComponent>\n <Button\n label={t(\"ActivatePurchaseBuyNow\")}",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/BackupStore.js",
      "line_number": 547,
      "context": "message =\n (\"response\" in err && err.response?.data?.error?.message) ||\n (\"message\" in err && err.message) ||\n \"\";\n \n if (err?.response?.status === 502) message = t(\"Common:UnexpectedError\");\n \n this.errorInformation = message ?? t(\"Common:UnexpectedError\");\n };\n \n getProgress = async (t) => {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/BackupStore.js",
      "line_number": 547,
      "context": "message =\n (\"response\" in err && err.response?.data?.error?.message) ||\n (\"message\" in err && err.message) ||\n \"\";\n \n if (err?.response?.status === 502) message = t(\"Common:UnexpectedError\");\n \n this.errorInformation = message ?? t(\"Common:UnexpectedError\");\n };\n \n getProgress = async (t) => {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/LdapFormStore.js",
      "line_number": 545,
      "context": ") {\n status = {\n completed: true,\n percents: 100,\n certificateConfirmRequest: null,\n error: t(\"Common:UnexpectedError\"),\n };\n }\n \n this.setProgress(status);",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/PaymentStore.ts",
      "line_number": 141,
      "context": "try {\n await Promise.all(requests);\n this.setBasicTariffContainer();\n } catch (error) {\n // toastr.error(t(\"Common:UnexpectedError\"));\n console.error(error);\n }\n \n if (this.isAlreadyPaid) await setPayerInfo();",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/PaymentStore.ts",
      "line_number": 141,
      "context": "try {\n await Promise.all(requests);\n this.setBasicTariffContainer();\n } catch (error) {\n // toastr.error(t(\"Common:UnexpectedError\"));\n console.error(error);\n }\n \n if (this.isAlreadyPaid) await setPayerInfo();",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/PaymentStore.ts",
      "line_number": 141,
      "context": "try {\n await Promise.all(requests);\n this.setBasicTariffContainer();\n } catch (error) {\n // toastr.error(t(\"Common:UnexpectedError\"));\n console.error(error);\n }\n \n if (this.isAlreadyPaid) await setPayerInfo();",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/PaymentStore.ts",
      "line_number": 141,
      "context": "try {\n await Promise.all(requests);\n this.setBasicTariffContainer();\n } catch (error) {\n // toastr.error(t(\"Common:UnexpectedError\"));\n console.error(error);\n }\n \n if (this.isAlreadyPaid) await setPayerInfo();",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/store/ProfileActionsStore.js",
      "line_number": 240,
      "context": "window.location.replace(\n combineUrl(window.ClientConfig?.proxy?.url, ssoLogoutUrl || \"/login\"),\n );\n } catch (e) {\n console.error(e);\n toastr.error(t(\"Common:UnexpectedError\"));\n }\n };\n \n onDebugClick = () => {\n this.setIsDebugDialogVisible(true);",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/doceditor/src/hooks/useDeleteFileDialog.ts",
      "line_number": 49,
      "context": "[Symbol.asyncIterator]() {\n return {\n async next() {\n const item = await getOperationProgressApi(\n id,\n t(\"Common:UnexpectedError\"),\n );\n return {\n done: item?.finished ?? true,\n value: item,\n };",
      "module": "/packages/doceditor"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "spelling",
          "description": "The word 'apoio' is a somewhat informal term for 'support'. While not incorrect, 'suporte' is generally preferred in more formal contexts.",
          "suggestion": "Ocorreu um erro inesperado. Tente novamente mais tarde ou contacte o suporte."
        }
      ],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}