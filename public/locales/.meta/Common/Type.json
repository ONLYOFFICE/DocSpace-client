{
  "key_path": "Type",
  "content": "Type",
  "content_en_sha1_hash": "3deb7456519697ecf4eefc455516c969a3681bae",
  "created_at": "2025-05-19T21:30:49.370Z",
  "updated_at": "2025-05-20T21:05:38.126Z",
  "comment": {
    "text": "This translation key is used to display a label indicating the type of an item or entity. It appears in various UI elements, such as titles, labels, and field headers, where it provides a brief description of the item's classification (e.g., \"Type\" for a data entry field).",
    "is_auto": true,
    "updated_at": "2025-05-20T08:37:15.715Z"
  },
  "usage": [
    {
      "file_path": "/packages/client/src/pages/Home/InfoPanel/Body/helpers/DetailsHelper.js",
      "line_number": 171,
      "context": "return this.t(\"Common:Owner\");\n case \"Location\":\n return this.t(\"Common:Location\");\n \n case \"Type\":\n return this.t(\"Common:Type\");\n case \"Storage Type\":\n return this.t(\"InfoPanel:StorageType\");\n \n case \"File extension\":\n return this.t(\"FileExtension\");",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/InfoPanel/Body/views/Users/index.tsx",
      "line_number": 239,
      "context": "title={statusLabel}\n >\n {statusLabel}\n </Text>\n \n <Text className=\"info_field\" noSelect title={t(\"Common:Type\")}>\n {t(\"Common:Type\")}\n </Text>\n {typeData}\n \n {isGuests && infoPanelSelection.createdBy?.displayName ? (",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/InfoPanel/Body/views/Users/index.tsx",
      "line_number": 239,
      "context": "title={statusLabel}\n >\n {statusLabel}\n </Text>\n \n <Text className=\"info_field\" noSelect title={t(\"Common:Type\")}>\n {t(\"Common:Type\")}\n </Text>\n {typeData}\n \n {isGuests && infoPanelSelection.createdBy?.displayName ? (",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Body/TableView/TableHeader.js",
      "line_number": 297,
      "context": "onClick: this.onFilter,\n onChange: this.onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: typeColumnIsEnabled,\n resizable: true,\n sortBy: SortByFieldName.Type,\n // onClick: this.onFilter,\n onChange: this.onColumnChange,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 818,
      "context": "const typeOptions = isRooms\n ? [\n {\n key: FilterGroups.filterType,\n group: FilterGroups.roomFilterType,\n label: t(\"Common:Type\"),\n isHeader: true,\n isLast: isLastTypeOptionsRooms,\n },\n ...RoomsTypeValues.map((roomType) => {\n switch (roomType) {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 818,
      "context": "const typeOptions = isRooms\n ? [\n {\n key: FilterGroups.filterType,\n group: FilterGroups.roomFilterType,\n label: t(\"Common:Type\"),\n isHeader: true,\n isLast: isLastTypeOptionsRooms,\n },\n ...RoomsTypeValues.map((roomType) => {\n switch (roomType) {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/index.js",
      "line_number": 818,
      "context": "const typeOptions = isRooms\n ? [\n {\n key: FilterGroups.filterType,\n group: FilterGroups.roomFilterType,\n label: t(\"Common:Type\"),\n isHeader: true,\n isLast: isLastTypeOptionsRooms,\n },\n ...RoomsTypeValues.map((roomType) => {\n switch (roomType) {",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 568,
      "context": "const typeItems = [\n {\n key: \"filter-type\",\n group: \"filter-type\",\n label: t(\"Common:Type\"),\n isHeader: true,\n },\n {\n id: \"filter_type-docspace-admin\",\n key: EmployeeType.Admin,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Home/Section/Filter/useContacts.tsx",
      "line_number": 568,
      "context": "const typeItems = [\n {\n key: \"filter-type\",\n group: \"filter-type\",\n label: t(\"Common:Type\"),\n isHeader: true,\n },\n {\n id: \"filter_type-docspace-admin\",\n key: EmployeeType.Admin,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/data-import/components/SelectUsersTypeStep/AccountsTable/TableView/UsersTableHeader.tsx",
      "line_number": 102,
      "context": "minWidth: 180,\n onChange: onColumnChange,\n },\n {\n key: \"Type\",\n title: t(\"Common:Type\"),\n enable: true,\n resizable: true,\n minWidth: 100,\n onChange: onColumnChange,\n },",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/JavascriptSDK/presets/Manager.js",
      "line_number": 105,
      "context": "setDocumentTitle(t(\"JavascriptSdk\"));\n \n const dataSortBy = [\n { key: \"DateAndTime\", label: t(\"Common:LastModifiedDate\"), default: true },\n { key: \"AZ\", label: t(\"Common:Title\") },\n { key: \"Type\", label: t(\"Common:Type\") },\n { key: \"Size\", label: t(\"Common:Size\") },\n { key: \"DateAndTimeCreation\", label: t(\"Files:ByCreation\") },\n { key: \"Author\", label: t(\"Files:ByAuthor\") },\n ];",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/JavascriptSDK/presets/Manager.js",
      "line_number": 105,
      "context": "setDocumentTitle(t(\"JavascriptSdk\"));\n \n const dataSortBy = [\n { key: \"DateAndTime\", label: t(\"Common:LastModifiedDate\"), default: true },\n { key: \"AZ\", label: t(\"Common:Title\") },\n { key: \"Type\", label: t(\"Common:Type\") },\n { key: \"Size\", label: t(\"Common:Size\") },\n { key: \"DateAndTimeCreation\", label: t(\"Files:ByCreation\") },\n { key: \"Author\", label: t(\"Files:ByAuthor\") },\n ];",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/JavascriptSDK/sub-components/FilterBlock.js",
      "line_number": 432,
      "context": "</UserInputContainer>\n )\n ) : null}\n <ToggleButton\n className=\"toggle\"\n label={t(\"Common:Type\")}\n onChange={toggleFilterType}\n isChecked={isTypeFilterSet}\n isDisabled={!!config.requestToken}\n />\n {isTypeFilterSet ? (",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/JavascriptSDK/sub-components/FilterBlock.js",
      "line_number": 432,
      "context": "</UserInputContainer>\n )\n ) : null}\n <ToggleButton\n className=\"toggle\"\n label={t(\"Common:Type\")}\n onChange={toggleFilterType}\n isChecked={isTypeFilterSet}\n isDisabled={!!config.requestToken}\n />\n {isTypeFilterSet ? (",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Profile/Section/Body/sub-components/main-profile/index.js",
      "line_number": 466,
      "context": "modernView={!isMobile()}\n />\n {isBetaLanguage ? <BetaBadge place=\"bottom-end\" /> : null}\n </div>\n \n <StyledLabel as=\"div\">{t(\"Common:Type\")}</StyledLabel>\n <div className=\"user-type-container\">\n <Text fontWeight={600} truncate title={profile.displayName}>\n {getUserTypeName(\n isOwner,\n isAdmin,",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/Profile/Section/Body/sub-components/main-profile/index.js",
      "line_number": 466,
      "context": "modernView={!isMobile()}\n />\n {isBetaLanguage ? <BetaBadge place=\"bottom-end\" /> : null}\n </div>\n \n <StyledLabel as=\"div\">{t(\"Common:Type\")}</StyledLabel>\n <div className=\"user-type-container\">\n <Text fontWeight={600} truncate title={profile.displayName}>\n {getUserTypeName(\n isOwner,\n isAdmin,",
      "module": "/packages/client"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "incorrect_translation",
          "description": "The Bulgarian translation \"Закачи\" (Zakachi) means \"attach\" or \"hang\". It is not an accurate translation of \"Type\".",
          "suggestion": "A more appropriate translation for \"Type\" in this context could be \"Тип\" (Tip)."
        }
      ],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}