{
  "key_path": "Label",
  "content": "Name",
  "content_en_sha1_hash": "709a23220f2c3d64d1e1d6d18c4d5280f8d82fca",
  "created_at": "2025-05-19T21:30:46.029Z",
  "updated_at": "2025-05-22T11:56:37.357Z",
  "comment": {
    "text": "The \"Label\" translation key is used to display a descriptive title for input fields, such as group names or room tags. It appears in a dialog box, specifically within the CreateEditGroupDialog and CreateEditRoomDialog components, where it provides context for users to enter a name. Translators should replace the English content with a translated version of \"Name\" while maintaining this descriptive purpose.",
    "is_auto": true,
    "updated_at": "2025-05-20T09:35:46.446Z"
  },
  "usage": [
    {
      "file_path": "\\packages\\client\\src\\components\\dialogs\\CreateEditGroupDialog\\sub-components\\GroupNameParam\\index.tsx",
      "line_number": 48,
      "context": "const { t } = useTranslation([\"Common\"]);\n \n return (\n <Styled.GroupNameParam>\n <Label\n title={t(\"Common:Label\")}\n className=\"input-label\"\n display=\"display\"\n htmlFor=\"create-group-name\"\n text={t(\"Common:Label\")}\n />",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\components\\dialogs\\CreateEditGroupDialog\\sub-components\\GroupNameParam\\index.tsx",
      "line_number": 48,
      "context": "const { t } = useTranslation([\"Common\"]);\n \n return (\n <Styled.GroupNameParam>\n <Label\n title={t(\"Common:Label\")}\n className=\"input-label\"\n display=\"display\"\n htmlFor=\"create-group-name\"\n text={t(\"Common:Label\")}\n />",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\components\\dialogs\\CreateEditRoomDialog\\sub-components\\SetRoomParams.js",
      "line_number": 412,
      "context": "const tagsTitle = isTemplateSelected || isTemplate ? t(\"Files:RoomTags\") : \"\";\n \n const inputTitle =\n isTemplateSelected || isTemplate\n ? `${t(\"Files:TemplateName\")}:`\n : `${t(\"Common:Label\")}:`;\n \n return (\n <StyledSetRoomParams disableImageRescaling={disableImageRescaling}>\n {isEdit || disabledChangeRoomType || isTemplateSelected || isTemplate ? (\n <RoomType",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\FormGallery\\Filter\\SortFilter\\index.js",
      "line_number": 45,
      "context": "const sortData = [\n {\n id: \"sort-by_name\",\n key: \"name_form\",\n label: t(\"Common:Label\"),\n default: false,\n isSelected: false,\n },\n {\n id: \"sort-by_updatedAt\",",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Body\\TableView\\TableHeader.js",
      "line_number": 258,
      "context": ": {};\n \n const columns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: nameColumnIsEnabled,\n default: true,\n sortBy: SortByFieldName.Name,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\Home\\Section\\Filter\\index.js",
      "line_number": 1172,
      "context": "const commonOptions = [];\n \n const name = {\n id: \"sort-by_name\",\n key: SortByFieldName.Name,\n label: t(\"Common:Label\"),\n default: true,\n };\n const modifiedDate = {\n id: \"sort-by_modified\",\n key: SortByFieldName.ModifiedDate,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\developer-tools\\ApiKeys\\sub-components\\CreateApiKeyDialog\\index.tsx",
      "line_number": 417,
      "context": "{t(\"Settings:CreateNewSecretKeyDialogDescription\")}\n </Text>\n ) : null}\n <div className=\"api-key_name\">\n <Text fontSize=\"13px\" fontWeight={600}>\n {t(\"Common:Label\")}\n </Text>\n <TextInput\n placeholder={t(\"Settings:NewSecretKey\")}\n value={inputValue}\n type={InputType.text}",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\developer-tools\\ApiKeys\\sub-components\\TableView\\TableHeader.tsx",
      "line_number": 51,
      "context": "const { t } = useTranslation([\"Webhooks\", \"Common\", \"Files\", \"Settings\"]);\n \n const defaultColumns: TableHeaderColumn[] = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: true,\n default: true,\n minWidth: 110,\n },",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\developer-tools\\JavascriptSDK\\presets\\Manager.js",
      "line_number": 138,
      "context": "const [columnDisplay, setColumnDisplay] = useState(\n columnDisplayOptions[0].value,\n );\n const [selectedColumns, setSelectedColumns] = useState([\n { key: \"Index\", label: t(\"Files:Index\") },\n { key: \"Name\", label: t(\"Common:Label\") },\n { key: \"Size\", label: t(\"Common:Size\") },\n { key: \"Type\", label: t(\"Common:Type\") },\n { key: \"Tags\", label: t(\"Common:Tags\") },\n ]);",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\developer-tools\\OAuth\\sub-components\\List\\TableView\\sub-components\\Header.tsx",
      "line_number": 40,
      "context": "const { t } = useTranslation([\"OAuth\", \"Files\", \"Webhooks\", \"Common\"]);\n \n const defaultColumns: TTableColumn[] = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: true,\n default: true,\n active: false,\n minWidth: 210,",
      "module": "\\packages\\client"
    },
    {
      "file_path": "\\packages\\client\\src\\pages\\PortalSettings\\categories\\developer-tools\\Webhooks\\sub-components\\WebhooksTable\\WebhooksTableView\\WebhookTableHeader.js",
      "line_number": 94,
      "context": ": {};\n \n const defaultColumns = [\n {\n key: \"Name\",\n title: t(\"Common:Label\"),\n resizable: true,\n enable: true,\n default: true,\n active: true,\n minWidth: 210,",
      "module": "\\packages\\client"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "incorrect_translation",
          "description": "The German translation 'Bezeichnung' while technically meaning 'designation' or 'description', isn't the most natural or direct translation of 'Name'. It implies a more formal or technical identification.",
          "suggestion": "Consider 'Name' or 'Beiname' for a more direct translation of 'Name'."
        }
      ],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "incorrect_translation",
          "description": "The Romanian translation \"Etichetă\" does not accurately convey the meaning of \"Name.\" \"Etichetă\" translates to \"Label.\" A more appropriate translation for \"Name\" would be \"Nume.\" ",
          "suggestion": "Nume"
        }
      ],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [
        {
          "type": "incorrect_translation",
          "description": "The Serbian (Cyrillic) translation \"Ознака\" translates to 'mark', 'sign', or 'characteristic', which doesn't accurately convey the meaning of 'Name'. 'Name' generally refers to the identifying label of something.",
          "suggestion": "Consider alternatives like \"Име\" (Ime) which is the standard translation for 'Name' in Serbian (Cyrillic)."
        }
      ],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}