{
  "key_path": "WebhookRedilivered",
  "content": "Webhook redelivered",
  "content_en_sha1_hash": "13d28a1ef0e6e6d4e990ba5202f4b9fd878de944",
  "created_at": "2025-05-19T21:30:49.883Z",
  "updated_at": "2025-05-20T09:46:45.147Z",
  "comment": {
    "text": "This translation key is used to display a success message when a webhook is successfully retried or redelivered. It appears in various UI elements, such as navigation headers and history tables, after an action related to webhooks has been completed.",
    "is_auto": true,
    "updated_at": "2025-05-20T09:46:45.147Z"
  },
  "usage": [
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/Webhooks/WebhookEventDetails/sub-components/DetailsNavigationHeader.js",
      "line_number": 118,
      "context": "navigate(`${path}/developer-tools/webhooks/${id}`);\n };\n \n const handleRetryEvent = async () => {\n await retryWebhook(eventId);\n toastr.success(t(\"WebhookRedilivered\"), <b>{t(\"Common:Done\")}</b>);\n };\n \n return (\n <HeaderContainer>\n <div className=\"headerNavigation\">",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/Webhooks/WebhookHistory/sub-components/HistoryHeader.js",
      "line_number": 228,
      "context": "await fetchHistoryItems({\n ...(historyFilters ? formatFilters(historyFilters) : {}),\n configId: id,\n });\n toastr.success(\n `${t(\"WebhookRedilivered\")}: ${checkedEventIds.length}`,\n <b>{t(\"Common:Done\")}</b>,\n );\n } catch (error) {\n console.error(error);\n toastr.error(error);",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/Webhooks/WebhookHistory/sub-components/WebhookHistoryTable/HistoryRowView/HistoryRow.js",
      "line_number": 66,
      "context": "await retryWebhook(historyItem.id);\n await fetchHistoryItems({\n ...(historyFilters ? formatFilters(historyFilters) : {}),\n configId: id,\n });\n toastr.success(t(\"WebhookRedilivered\"), <b>{t(\"Common:Done\")}</b>);\n };\n const handleOnSelect = () => toggleEventId(historyItem.id);\n const handleRowClick = (e) => {\n if (\n e.target.closest(\".checkbox\") ||",
      "module": "/packages/client"
    },
    {
      "file_path": "/packages/client/src/pages/PortalSettings/categories/developer-tools/Webhooks/WebhookHistory/sub-components/WebhookHistoryTable/HistoryTableView/HistoryTableRow.js",
      "line_number": 107,
      "context": "await retryWebhook(item.id);\n await fetchHistoryItems({\n ...(historyFilters ? formatFilters(historyFilters) : {}),\n configId: id,\n });\n toastr.success(t(\"WebhookRedilivered\"), <b>{t(\"Common:Done\")}</b>);\n };\n \n const contextOptions = [\n {\n id: \"webhook-details\",",
      "module": "/packages/client"
    }
  ],
  "languages": {
    "en": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ar-SA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "az": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "bg": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "cs": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "de": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "el-GR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "es": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "fr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "hy-AM": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "it": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ja-JP": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ko-KR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lo-LA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "lv": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "nl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "pt-BR": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ro": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "ru": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "si": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sk": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sl": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Cyrl-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "sr-Latn-RS": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "tr": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "uk-UA": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "vi": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    },
    "zh-CN": {
      "ai_translated": false,
      "ai_model": null,
      "ai_spell_check_issues": [],
      "approved_at": null
    }
  }
}